% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shof_model.R
\name{shof_model}
\alias{shof_model}
\title{SHOF model class.}
\description{
SHOF model class.

SHOF model class.
}
\section{Super class}{
\code{\link[realPSD:psd_model]{realPSD::psd_model}} -> \code{shof_model}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{Temp}}{Temperature of the system.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-to_theta}{\code{shof_model$to_theta()}}
\item \href{#method-to_phi}{\code{shof_model$to_phi()}}
\item \href{#method-new}{\code{shof_model$new()}}
\item \href{#method-clone}{\code{shof_model$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="realPSD" data-topic="psd_model" data-id="nll">}\href{../../realPSD/html/psd_model.html#method-nll}{\code{realPSD::psd_model$nll()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="realPSD" data-topic="psd_model" data-id="nlp">}\href{../../realPSD/html/psd_model.html#method-nlp}{\code{realPSD::psd_model$nlp()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="realPSD" data-topic="psd_model" data-id="resid">}\href{../../realPSD/html/psd_model.html#method-resid}{\code{realPSD::psd_model$resid()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="realPSD" data-topic="psd_model" data-id="set_est">}\href{../../realPSD/html/psd_model.html#method-set_est}{\code{realPSD::psd_model$set_est()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="realPSD" data-topic="psd_model" data-id="set_psd">}\href{../../realPSD/html/psd_model.html#method-set_psd}{\code{realPSD::psd_model$set_psd()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="realPSD" data-topic="psd_model" data-id="ufun">}\href{../../realPSD/html/psd_model.html#method-ufun}{\code{realPSD::psd_model$ufun()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="realPSD" data-topic="psd_model" data-id="vcov">}\href{../../realPSD/html/psd_model.html#method-vcov}{\code{realPSD::psd_model$vcov()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="realPSD" data-topic="psd_model" data-id="zeta">}\href{../../realPSD/html/psd_model.html#method-zeta}{\code{realPSD::psd_model$zeta()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-to_theta"></a>}}
\if{latex}{\out{\hypertarget{method-to_theta}{}}}
\subsection{Method \code{to_theta()}}{
Transform computational to original basis.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{shof_model$to_theta(phi, zeta)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{phi}}{Vector of normalized PSD parameters.}

\item{\code{zeta}}{Log-scale parameter.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
The original basis parameters are\preformatted{theta = (k, f0, Q, Sf, alpha).
}

The transformed parameters are\preformatted{phi = (log(f0), log(Q), log(Rf), alpha),   zeta = log(tau),
}

where\preformatted{tau = Kb*Temp / (k*pi*f0*Q),    Rf = Sf/tau.
}
}

\subsection{Returns}{
The parameter vector in the original basis.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-to_phi"></a>}}
\if{latex}{\out{\hypertarget{method-to_phi}{}}}
\subsection{Method \code{to_phi()}}{
Transformation from the original to the computational basis.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{shof_model$to_phi(theta)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{theta}}{Vector of parameters in the original basis.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list with elements \code{phi} and \code{zeta}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
SHOF model constructor.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{shof_model$new(
  freq,
  Ypsd,
  Temp,
  est_type = c("lp", "nls", "mle"),
  bin_size = 100,
  bin_type = c("mean", "median")
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{freq}}{Frequency vector.}

\item{\code{Ypsd}}{Periodogram vector.}

\item{\code{Temp}}{Temperature (Kelvin).}

\item{\code{est_type}}{Type of estimator: "lp", "nls", or "mle".}

\item{\code{bin_size}}{Bin size.}

\item{\code{bin_type}}{Type of bin: "mean" or "median".}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{shof_model$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
